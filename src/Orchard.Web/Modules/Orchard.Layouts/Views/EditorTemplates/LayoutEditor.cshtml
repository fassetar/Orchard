@using System.Globalization
@model Orchard.Layouts.ViewModels.LayoutEditor
@{
    Script.Require("jQueryCookie");
    //Script.Require("jQueryUI");
    Script.Require("Layouts.LayoutEditor");
    //Script.Include("jquery.deserialize.js");

    // Utilities.
    //Script.Include("dialog.js");
    Script.Include("frame.js");
    Script.Include("LayoutDecoder.js");

    // The actual layout editor.


    using (Script.Foot()) {
        <script>
            angular
              .module("LayoutEditor")
              .constant("environment", {
                  templateUrl: function (templateName) {
                      return "@Url.Action("Get", "Template", new { area = "Orchard.Layouts" })" + "/" + templateName;
                  }
              });

            angular.bootstrap($(".layout-editor-holder")[0], ["LayoutEditor"]);

            (function () {
                var editorConfig = JSON.parse(LayoutEditor.decode("@Html.Raw(Url.Encode(Model.ConfigurationData))"));
                var editorCanvasData = JSON.parse(LayoutEditor.decode("@Html.Raw(Url.Encode(Model.Data))"));
                var layoutEditor = window.layoutEditor = new LayoutEditor.Editor(editorConfig, editorCanvasData);

                //var host = new window.Orchard.Layouts.LayoutDesignerHost($(".layout-designer"), layoutEditor);
                //$(".layout-designer").each(function (e) {
                //    var designer = $(this);
                //    var dialog = designer.find(".layout-editor-help-dialog");
                //    designer.find(".layout-editor-help-link").click(function (e) {
                //        dialog.dialog({
                //            modal: true,
                //            width: 840
                //        });
                //        e.preventDefault();
                //    });
                //});
            });

        </script>
    }

    var contentId = Model.Content != null ? Model.Content.Id : default(int?);
    var contentType = Model.Content != null ? Model.Content.ContentItem.ContentType : default(string);
}
<fieldset>
    <div class="layout-designer"
         data-modelstate-valid="@ViewData.ModelState.IsValid.ToString().ToLower()"
         data-display-type="Design"
         data-edit-url="@Url.Action("Edit", "Element", new { session = Model.SessionKey, contentId, contentType, area = "Orchard.Layouts" })"
         data-apply-template-url="@Url.Action("ApplyTemplate", "Layout", new { contentId, contentType, area = "Orchard.Layouts" })"
         data-confirm-delete-prompt="Are you sure you want to delete this element?"
         data-editor-dialog-title-format="$1 Properties"
         data-editor-dialog-name="Layout"
         data-anti-forgery-token="@Html.AntiForgeryTokenValueOrchard()"
         data-session-key="@Model.SessionKey">

        @Html.HiddenFor(m => m.SessionKey)
        @Html.HiddenFor(m => m.Data, new { @class = "layout-data-field" })
        @Html.HiddenFor(m => m.RecycleBin, new { @class = "recycle-bin-data-field" })
        <div class="layout-editor-toolbar">
            <ol class="layout-editor-toolbar-group list-unstyled">
                <li>
                    <label>Layout</label>
                </li>
            </ol>
            <ol class="layout-editor-toolbar-group list-unstyled">
             
                @if (Model.Templates.Any()) {
                    var options = Model.Templates.Select(x => new SelectListItem { Text = Html.ItemDisplayText(x).ToString(), Value = x.Id.ToString(CultureInfo.InvariantCulture), Selected = x.Id == Model.TemplateId });
                    <li>
                        <div class="template-picker">
                            <label>
                                Use existing layout:
                                @Html.DropDownListFor(x => x.TemplateId, options, T("(None)").Text)
                            </label>
                        </div>
                    </li>
                }
            </ol>
        </div>
        <div class="layout-editor-holder">
            <orc-layout-editor model="window.layoutEditor" />
        </div>
        @*Display.DialogTemplate(Name: "Layout")*@
    </div>
</fieldset>
<br />