@using Orchard.Core.Contents.ViewModels;
@{
    var typeDisplayName = Model.TypeDisplayName;
    var pageTitle = T("Manage Content");
    var createLinkText = T("Create New Content");
    if (!string.IsNullOrWhiteSpace(typeDisplayName)) {
        pageTitle = T("Manage {0} Content", Html.Raw(typeDisplayName));
        createLinkText = T("Create New {0}", Html.Raw(typeDisplayName));
    }

    IEnumerable<string> cultures = Model.Options.Cultures;

    Layout.Title = pageTitle.Text;
}

@using (Html.BeginFormAntiForgeryPost()) {
    <div class="row">
        <div class="col-lg-6">
            <br>
            <div class="input-group">
                <span class="input-group-addon">Actions:</span>
                <select id="publishActions" name="Options.BulkAction" class="form-control">
                    @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.None, T("Choose action...").ToString())
                    @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.PublishNow, T("Publish Now").ToString())
                    @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.Unpublish, T("Unpublish").ToString())
                    @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.Remove, T("Delete").ToString())
                </select>
                <div class="input-group-btn">
                    <button type="submit" class="btn btn-success " name="submit.BulkEdit" value="yes">Apply</button>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <br>
            <div class="manage">
                @Html.ActionLink(createLinkText.Text, "Create", new { Area = "Contents", Id = (string)Model.Options.SelectedFilter }, new { @class = "btn btn-primary pull-right" })
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-lg-4">
            <br>
            <div class="input-group">
                <span class="input-group-addon">Show</span>
                <select id="filterResults" name="Options.SelectedFilter" class="form-control">
                    @Html.SelectOption((string)Model.Options.SelectedFilter, "", T("any (show all)").ToString())
                    @foreach (var filterOption in Model.Options.FilterOptions) {
                        @Html.SelectOption((string)Model.Options.SelectedFilter, (string)filterOption.Key, (string)filterOption.Value)
                    }
                </select>

            </div>
        </div>
        <div class="col-lg-8">
            <br>
            <div class="input-group">
                <span class="input-group-addon">Ordered by:</span>
                <select id="orderResults" name="Options.OrderBy" class="form-control">
                    @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Created, T("recently created").ToString())
                    @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Modified, T("recently modified").ToString())
                    @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Published, T("recently published").ToString())
                </select>
                <label class="input-group-addon">Filter by:</label>
                <select id="contentResults" name="Options.ContentsStatus" class="form-control">
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Owner, T("owned by me").ToString())
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Latest, T("latest").ToString())
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Published, T("published").ToString())
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Draft, T("unpublished").ToString())
                    @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.AllVersions, T("all versions").ToString())
                </select>
                <div class="input-group-btn">
                    <button type="submit" class="btn btn-success " name="submit.Filter" value="yes please">Apply</button>
                </div>
            </div>
        </div>
        @if (cultures.Count() > 1) {
            <span class="bulk-culture">Culture</span>
            <select id="filterCultures" name="Options.SelectedCulture" class="form-control">
                @Html.SelectOption((string)Model.Options.SelectedCulture, "", T("any (show all)").ToString())
                @foreach (string culture in cultures) {
                    @Html.SelectOption((string)Model.Options.SelectedCulture, culture, System.Globalization.CultureInfo.GetCultureInfo(culture).DisplayName)
                }
            </select>
        }
    </div>
    <br />
    <label><input type="checkbox" class="check-all" />Select All</label>
        <div class="contentItems bulk-items group-list">
            @Display(Model.ContentItems)
        </div>
        @Display(Model.Pager)
}