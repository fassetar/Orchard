@model Orchard.Tags.ViewModels.TagsAdminIndexViewModel
@using Orchard.Tags.ViewModels;
@using Orchard.Utility.Extensions;
@{
    Script.Require("ShapesBase");
    Layout.Title = T("Tags").ToString();
}

@Html.ValidationSummary()
<div class="row">
    <div class="col-lg-6">
        <br />
        @using (Html.BeginFormAntiForgeryPost()) {
            <div class="input-group">
                <span class="input-group-addon">
                    Actions:
                </span>
                <select id="publishActions" name="@Html.NameOf(m => m.BulkAction)" class="form-control">
                    @Html.SelectOption(Model.BulkAction, TagAdminIndexBulkAction.None, T("Choose action...").ToString())
                    @Html.SelectOption(Model.BulkAction, TagAdminIndexBulkAction.Delete, T("Delete").ToString())
                </select>
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit" name="submit.BulkEdit" value="Apply">Apply</button>
                </span>
            </div>
        }
    </div>
    <div class="col-lg-6">
        <br />
        @Display.EditorTemplate(TemplateName: "Parts/CreateTag", Model: ViewData["CreateTag"] != null ? ViewData["CreateTag"] : new TagsAdminCreateViewModel())
    </div>
</div>
<br />
<fieldset>
    <table class="table table-striped" summary="This is a table of the tags in your application">
        <colgroup>
            <col id="Name" />
            <col id="Email" />
            <col id="Edit" />
        </colgroup>
        <thead>
            <tr>
                <th scope="col"><input type="checkbox" class="check-all" /></th>
                <th scope="col">Name</th>
                <th scope="col"></th>
            </tr>
        </thead>
        @{var tagIndex = 0;}
        @foreach (var tagEntry in Model.Tags) {
            <tr>
                <td>
                    <input type="hidden" value="@Model.Tags[tagIndex].Tag.Id" name="@Html.NameOf(m => m.Tags[tagIndex].Tag.Id)" />
                    <input type="checkbox" value="true" name="@Html.NameOf(m => m.Tags[tagIndex].IsChecked)" />
                </td>
                <td>
                    @Html.ActionLink(tagEntry.Tag.TagName, "Edit", new { id = tagEntry.Tag.Id })
                </td>
                <td>
                    @Html.ActionLink(T("Edit").ToString(), "Edit", new { id = tagEntry.Tag.Id }) @T(" | ")
                    <a href="@Url.Action("Remove", new {tagEntry.Tag.Id, returnUrl = ViewContext.RequestContext.HttpContext.Request.ToUrlString()})" itemprop="RemoveUrl UnsafeUrl">@T("Delete")</a>
                </td>
            </tr>
            tagIndex = tagIndex + 1;
        }
    </table>
    @Display(Model.Pager)
</fieldset>