@model dynamic
@{
    SetMeta(null, content: "IE=edge", httpEquiv: "X-UA-Compatible");
    SetMeta(name: "viewport", content: "width=device-width, initial-scale=1");
    //Style.Include("ie.css").UseCondition("gte IE 9").SetAttribute("media", "screen, projection");
    Style.Include("bootstrap.css");
    Style.Include("font-awesome.css");
    Style.Include("site.css");
    Style.Include("https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.standalone.min.css");

    Script.Require("jQuery").AtFoot();
    Script.Require("Bootstrap").AtFoot();
    Script.Require("ShapesBase").AtFoot();
    Script.Include("admin.js").AtFoot();
    Script.Include("https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js");

    /* Some useful shortcuts or settings
    ***************************************************************/

    Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones

    /* Inserting some ad hoc shapes
    ***************************************************************/

    // these are just hacked together to fire existing partials... can change
    //Model.Navigation.Add(Display.Header());

    Model.Header.Add(Display.User(CurrentUser: WorkContext.CurrentUser));
    Model.Footer.Add(Display.OrchardVersion());

    if (Model.Title != null)
    {
        Model.Header.Add(Display.Title(Title: Model.Title));
    }
}

<div id="layout-content" class="affix-row">
        <div class="col-sm-3 col-md-2 affix-sidebar">
            <div class="sidebar-nav">
                <div class="navbar navbar-default" role="navigation">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".sidebar-navbar-collapse">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <span class="visible-xs navbar-brand" id="header" role="banner">
                            @Display.Header()
                        </span>
                    </div>
                    @if (Model.Navigation != null)
                    {
                        <div class="navbar-collapse collapse sidebar-navbar-collapse">
                            <nav id="menu" class="sidebar" role="navigation">
                                <div class="hidden-xs" id="header" role="banner">
                                    <br />
                                    @Display.Header()
                                </div>
                                @Zone(Model.Navigation)
                            </nav>
                        </div>
                    }
                </div>
            </div>
        </div>
    <div id="layout-main" class="col-sm-9 col-md-10 affix-content">
        <div id="main" role="main" class="container-fluid">
            @if (Model.Header != null)
            {
                <div class="navbar">
                    @Zone(Model.Header)
                </div>
            }
            @if (Model.Messages != null)
            {
                <div id="messages">
                    @Zone(Model.Messages)
                </div>
            }

            @if (Model.BeforeContent != null)
            {
                <div id="before-content">
                    @Zone(Model.BeforeContent)
                </div>
            }

            @if (Model.LocalNavigation != null)
            {
                <div id="local-navigation">
                    @Zone(Model.LocalNavigation)
                </div>
            }

            @if (Model.Content != null)
            {
                <div id="content" class="group panel panel-default">
                    <div class="panel-body">
                        @Zone(Model.Content)
                    </div>
                </div>
            }

            @if (Model.AfterContent != null)
            {
                <div id="after-content">
                    @Zone(Model.AfterContent)
                </div>
            }
            @if (Model.Footer != null)
            {
                <div id="footer" role="contentinfo" class="pull-right">
                    @Zone(Model.Footer)
                </div>
            }
        </div>
    </div>
</div>

@using (Script.Foot())
{
    <script type="text/javascript">
        //<![CDATA[
        var confirmRemoveMessage = '@T("Are you sure you want to remove this element?")';
        //]]>
    </script>
}