@model Orchard.Users.ViewModels.UsersIndexViewModel
@using Orchard.Core.Shapes;
@using Orchard.Users.Models;
@using Orchard.Users.ViewModels;



@{
    var userIndex = 0;

    Layout.Title = T("Users").ToString();
}
@using (Html.BeginFormAntiForgeryPost())
{
    @Html.ValidationSummary()
    <div class="row">
        <div class="col-lg-6">
            <br />
            <div class="input-group">
                <span class="input-group-addon">
                    @T("Actions:")
                </span>
                <select id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)" class="form-control">
                    @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.None, T("Choose action...").ToString())
                    @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.Approve, T("Approve").ToString())
                    @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.Disable, T("Disable").ToString())
                    @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.ChallengeEmail, T("Send challenge E-mail").ToString())
                    @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.Delete, T("Delete").ToString())
                </select>
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit" name="submit.BulkEdit" value="@T("Apply")">@T("Apply")</button>
                </span>
            </div>

        </div>
        <div class="col-lg-6">
            <br />
            <div class="manage">@Html.ActionLink(T("Add a new user").ToString(), "Create", new { }, new { @class = "btn btn-success pull-right" })</div>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-lg-6">
            <div class="input-group">
                <span class="input-group-addon">
                    @T("Sort by:")
                </span>
                <select id="sortResults" name="@Html.NameOf(m => m.Options.Order)" class="form-control">
                    @Html.SelectOption(Model.Options.Order, UsersOrder.Name, T("Name").ToString())
                    @Html.SelectOption(Model.Options.Order, UsersOrder.Email, T("Email").ToString())
                    @Html.SelectOption(Model.Options.Order, UsersOrder.CreatedUtc, T("Creation Time").ToString())
                    @Html.SelectOption(Model.Options.Order, UsersOrder.LastLoginUtc, T("Last Login Time").ToString())
                </select>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="input-group">
                  <div class="input-group-btn">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@T("Filter:") <span class="caret"></span></button>
                <ul class="dropdown-menu">
                    <li><a href="#">Action</a></li>
                    <li><a href="#">Another action</a></li>
                    <li><a href="#">Something else here</a></li>
                    <li role="separator" class="divider"></li>
                    <li><a href="#">Separated link</a></li>
                </ul>
                </div>
                @Html.TextBoxFor(m => m.Options.Search, new { @class = "form-control" })
                <span class="input-group-btn">
                    <button type="submit" name="submit.Filter" class="btn btn-success" value="@T("Filter")">@T("Filter")</button>
                </span>

            </div>
            @*<div class="input-group hidden">
                <select id="filterResults" name="@Html.NameOf(m => m.Options.Filter)" class="hidden">
                    @Html.SelectOption(Model.Options.Filter, UsersFilter.All, T("All Users").ToString())
                    @Html.SelectOption(Model.Options.Filter, UsersFilter.Approved, T("Approved Users").ToString())
                    @Html.SelectOption(Model.Options.Filter, UsersFilter.Pending, T("Pending Users").ToString())
                    @Html.SelectOption(Model.Options.Filter, UsersFilter.EmailPending, T("Pending Emails").ToString())
                </select>
                <span class="input-group-btn">
                    <button type="submit" name="submit.Filter" class="btn btn-sm btn-success" value="@T("Filter")">@T("Filter")</button>
                </span>
            </div>*@
        </div>
    </div>
    <fieldset class="bulk-actions"></fieldset>
    <fieldset>
        <br />
        <div class="table-responsive panel panel-default">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col"><input type="checkbox" class="check-all" /></th>
                        <th scope="col">@T("Name")</th>
                        <th scope="col">@T("Email")</th>
                        <th scope="col">@T("Actions")</th>
                        <th scope="col">@T("Creation Time")</th>
                        <th scope="col">@T("Last Login Time")</th>
                    </tr>
                </thead>
                @foreach (var entry in Model.Users)
                {
                    <tr>
                        <td>
                            <input type="hidden" value="@Model.Users[userIndex].User.Id" name="@Html.NameOf(m => m.Users[userIndex].User.Id)" />
                            <input type="checkbox" value="true" name="@Html.NameOf(m => m.Users[userIndex].IsChecked)" />
                        </td>
                        <td>
                            @if (entry.User.RegistrationStatus == UserStatus.Approved && entry.User.EmailStatus == UserStatus.Approved)
                            {
                                <img class="icon" src="@Href("~/Modules/Orchard.Users/Content/Admin/images/online.gif") " alt="@T("Approved") " title="@T("User is approved") " />
                            }
                            else
                            {
                                <img class="icon" src="@Href("~/Modules/Orchard.Users/Content/Admin/images/offline.gif") " alt="@T("Moderated") " title="@if (entry.User.EmailStatus == UserStatus.Approved) { @T("User is moderated") } else { @T("E-mail validation is pending") }" />
                            }
                            @Html.ActionLink(entry.User.UserName, "Edit", new { entry.User.Id })
                        </td>
                        <td>
                            @entry.User.Email
                        </td>
                        <td>
                            @Html.ActionLink(T("Edit").ToString(), "Edit", new { entry.User.Id }) |
                            @Html.ActionLink(T("Delete").ToString(), "Delete", new { entry.User.Id }, new { itemprop = "RemoveUrl UnsafeUrl" }) |
                            @if (entry.User.RegistrationStatus == UserStatus.Pending)
                            {
                                @Html.ActionLink(T("Approve").ToString(), "Approve", new { entry.User.Id }, new { itemprop = "UnsafeUrl" })
                            }
                            else
                            {
                                @Html.ActionLink(T("Disable").ToString(), "Moderate", new { entry.User.Id }, new { itemprop = "UnsafeUrl" })
                            }
                            @if (entry.User.EmailStatus == UserStatus.Pending)
                            { <text>|</text>
                                @Html.ActionLink(T("Send challenge E-mail").ToString(), "SendChallengeEmail", new { entry.User.Id }, new { itemprop = "UnsafeUrl" })
                            }
                        </td>
                        <td>
                            @if (entry.User.CreatedUtc != null)
                            {
                                @Display(New.DateTimeRelative(dateTimeUtc: entry.User.CreatedUtc))
                            }
                        </td>
                        <td>
                            @if (entry.User.LastLoginUtc != null)
                            {
                                @Display(New.DateTimeRelative(dateTimeUtc: entry.User.LastLoginUtc))
                            }
                        </td>
                    </tr>
                    userIndex++;
                }
            </table>
        </div>
        @Display(Model.Pager)

    </fieldset>
}
